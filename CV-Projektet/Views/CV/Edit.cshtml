@model CVDetails
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
	ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
<div class="gridCV">
	<div class="CVleft">
		<div class="leftText"></div>
		<a class="edit" href="@Url.Action("Index","CV", new { userID = UserManager.GetUserId(User)})">
			<span class="material-symbols-outlined">
				settings
			</span>
			<br />
			<p>Tillbaka</p>
		</a>

		@try
		{
			if (@Model.User.ImageModel.Name.Any())
			{
				<img class="profilepicture" src="@("~/image/" + @Model.User.ImageModel.Name)" asp-append-version="true" />
			}
		}
		catch (Exception ex)
		{
			<span class="material-symbols-outlined" style="font-size:220px; color: #FFFEF6; ">
				account_circle
			</span>
		}
		<a class="edit" href="@Url.Action("Index","Image", new { userID = User.Identity})">
			<span class="material-symbols-outlined">
				edit
			</span>
			<br />
			<p>Hantera profilbild</p>
		</a>

		@try
		{
			<h1>@Model.User.FirstName @Model.User.LastName</h1>
			<br />
			<div class="leftText">
				<p>@Model.User.PhoneNumber</p>
				<p>@Model.User.Email</p>
			</div>
			<div class="leftText">
				<p>@Model.User.Address.Street</p>
				<p>@Model.User.Address.PostalCode, @Model.User.Address.City</p>
			</div>
			<br />
			<p>@Model.User.Description</p>
		}
		catch (Exception ex) { }
		<div class="cvSocialLinks">
			<a href="#" class="fa fa-twitter"></a>
			<a href="#" class="fa fa-linkedin"></a>
			<a href="#" class="fa fa-instagram"></a>
		</div>
	</div>
	<div class="CVright">

		@try
		{
			<h2 class="accentWord">Kompetenser</h2>
			<hr class="CVLine" />
			@if (Model.CompetenceList.Any())
			{
					@foreach (var item in Model.CompetenceList)
					{
						<p>@item.Name</p>
					}
			}
			else
			{
				<p>Du har inga kompetenser tillagda. Lägg till fler nedan.</p>
			}
			<a href="@Url.Action("Competence", "CVSettings", new { userID = UserManager.GetUserId(User)})"><button class="btn btn-dark">Lägg till fler kompetenser</button></a>
			<br />
			<br />
			<h2 class="accentWord">Utbildningar</h2>
			<hr class="CVLine" />
			@if (Model.ExperienceList.Where(e => e.Type.Equals("Education")).Any())
			{
				<br />
				@foreach (var item in Model.ExperienceList)
				{
					if (item.Type.Equals("Education"))
					{
						<h3>@item.Title</h3>
						<p>@item.StartDate.ToString().Substring(0, 10) - @item.EndDate.ToString().Substring(0, 10)</p>
						<p>@item.Place, @item.City</p>
						<p>@item.Description</p>
					}
				}
			}
			else
			{
				<p>Du har inga utbildningar tillagda. Lägg till fler nedan.</p>
			}
			<br />
			<h2 class="accentWord">Arbetslivserfarenheter</h2>
			<hr class="CVLine" />
			@if (Model.ExperienceList.Where(e => e.Type.Equals("Work")).Any())
			{
				<br />
				@foreach (var item in Model.ExperienceList)
				{
					if (item.Type.Equals("Work"))
					{
						<h3>@item.Title</h3>
						<p>@item.StartDate.ToString().Substring(0, 10) - @item.EndDate.ToString().Substring(0, 10)</p>
						<p>@item.Place , @item.City</p>
						<p>@item.Description</p>
					}
				}
			}
			else
			{
				<p>Du har inga arbeten tillagda. Lägg till fler nedan.</p>
			}
			<br />
			<h2 class="accentWord">Kurser</h2>
			<hr class="CVLine" />
			@if (Model.ExperienceList.Where(e => e.Type.Equals("Course")).Any())
			{
				<br />
				@foreach (var item in Model.ExperienceList)
				{
					if (item.Type.Equals("Course"))
					{
						<h3>@item.Title</h3>
						<p>@item.StartDate.ToString().Substring(0, 10) - @item.EndDate.ToString().Substring(0, 10)</p>
						<p>@item.Place , @item.City</p>
						<p>@item.Description</p>
					}

				}
			}
			else
			{
				<p>Du har inga kurser tillagda. Lägg till fler nedan.</p>
			}
			<br />
			<h2 class="accentWord">Övrigt</h2>
			<hr class="CVLine" />
			@if (Model.ExperienceList.Where(e => e.Type.Equals("Misc")).Any())
			{
				<br />
				@foreach (var item in Model.ExperienceList)
				{
					@if (item.Type.Equals("Misc"))
					{
						<h3>@item.Title</h3>
						<p>@item.StartDate.ToString().Substring(0, 10) - @item.EndDate.ToString().Substring(0, 10)</p>
						<p>@item.Place , @item.City</p>
						<p>@item.Description</p>
					}

				}
			}
			else
			{
				<p>Du har inga övriga erfarenheter tillagda. Lägg till fler nedan.</p>
			}
			<a href="@Url.Action("Experience", "CVSettings", new { userID = UserManager.GetUserId(User)})"><button class="btn btn-dark">Lägg till fler erfarenheter</button></a>

			<br />
			<br />
			<h2 class="accentWord">Projekt</h2>
			<hr class="CVLine" />
			@if (Model.ProjectList.Any())
			{
				<br />
				@foreach (var project in Model.ProjectList)
				{
					<h3>@project.Name</h3>
					<p>@project.Description</p>
					<a class="involved btn btn-dark" href="@Url.Action("LeaveProject", "User", new { projectId = project.ID, caller = "projects"})">&#x2717; Lämna projektet</a>
					<br />
				}
			}
			else
			{
				<p>Du har inte lagt till några projekt. Välj att gå med i ett projekt eller skapa ett nytt nedan. </p>
			}
			<br />
			<a asp-area="" class="btn btn-dark" asp-controller="Projects" asp-action="Index">Gå med i projekt</a>
			<a asp-area="" class="btn btn-dark" asp-controller="Projects" asp-action="CreateProject">Skapa projekt</a>
			<br />
			<br />
				<h2 class="accentWord">Mina projekt</h2>
			<hr class="CVLine" />
			@if (!Model.ProjectLeaderList.Any())
			{	
				<br />
				<hr class="CVLine" />
				<p>Du har inte skapat några projekt. Välj att gå med i ett projekt eller skapa ett nytt ovan. </p>
			}
				<a asp-area="" asp-controller="ManagedProjects" asp-action="Index" class="btn btn-dark">Hantera mina projekt</a>
		}
		catch (Exception ex) { }
	</div>
</div>