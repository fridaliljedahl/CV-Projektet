@model CVDetails
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
	ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
<div class="gridCV">
	<div class="CVleft">
		<div class="leftText"></div>
		@if (Model.User.Id.Equals(UserManager.GetUserId(User)))
		{
		<a class="edit" href="@Url.Action("Edit","CV", new { userID = UserManager.GetUserId(User)})">
			<span class="material-symbols-outlined">
				settings
			</span>
		</a>
		}
		@try
		{
			@if (Model.User.ImageModel.Name != null)
			{
				<img class="profilepicture" src="@("~/image/" + Model.User.ImageModel.Name)" asp-append-version="true" />
			}
		}
		catch (Exception ex)
		{
			<span class="material-symbols-outlined" style="font-size:250px; color: #FFFEF6; ">
				account_circle
			</span>
		}

		<h1>@Model.User.FirstName @Model.User.LastName</h1>
		<div class="leftText">
			<p>@Model.User.PhoneNumber</p>
			<p>@Model.User.Email</p>
		</div>
		<div class="leftText">
			@if (Model.User.Address != null)
			{
				<p>@Model.User.Address.Street</p>
				<p>@Model.User.Address.PostalCode, @Model.User.Address.City</p>
			}
		</div>


		<p>@Model.User.Description</p>

		<div class="cvSocialLinks">
			<a href="#" class="fa fa-twitter"></a>
			<a href="#" class="fa fa-linkedin"></a>
			<a href="#" class="fa fa-instagram"></a>
		</div>
	</div>
	<div class="CVright">
		<div>
			<br />
			<br />
			<br />
			<br />
			<br />
			<br />
			<br />
			<br />
			<br />
			<br />
		</div>
		@try
		{@if (Model.CompetenceList.Any())
			{
				<h2 class="competence">Kompetenser</h2>
				<ul>
					@foreach (var item in Model.CompetenceList)
					{
						<li>@item.Name</li>
					}
				</ul>
			}

			@if (Model.ExperienceList.Where(e => e.Type.Equals("Education")).Any())
			{
				<h2 class="education">Utbildningar</h2>
				@foreach (var item in Model.ExperienceList)
				{
					if (item.Type.Equals("Education"))
					{
						<h3>@item.Title</h3>
						<p>@item.StartDate.ToString().Substring(0, 10) - @item.EndDate.ToString().Substring(0, 10)</p>
						<p>@item.Place, @item.City</p>
						<p>@item.Description</p>
					}
				}
			}

			@if (Model.ExperienceList.Where(e => e.Type.Equals("Work")).Any())
			{
				<h2 class="work">Arbetslivserfarenhet</h2>
				@foreach (var item in Model.ExperienceList)
				{
					if (item.Type.Equals("Work"))
					{
						<h3>@item.Title</h3>
						<p>@item.StartDate.ToString().Substring(0, 10) - @item.EndDate.ToString().Substring(0, 10)</p>
						<p>@item.Place , @item.City</p>
						<p>@item.Description</p>
					}
				}
			}

			@if (Model.ExperienceList.Where(e => e.Type.Equals("Course")).Any())
			{
				<h2 class="coure">Kurser</h2>
				@foreach (var item in Model.ExperienceList)
				{
					if (item.Type.Equals("Course"))
					{
						<h3>@item.Title</h3>
						<p>@item.StartDate.ToString().Substring(0, 10) - @item.EndDate.ToString().Substring(0, 10)</p>
						<p>@item.Place , @item.City</p>
						<p>@item.Description</p>
					}
				}
			}

			@if (Model.ExperienceList.Where(e => e.Type.Equals("Misc")).Any())
			{
				<h2 class="misc">Övrigt</h2>
				<p></p>
			}

			@if (Model.ProjectList.Any())
			{
				<h2 class="project">Projekt</h2>
				@foreach (var project in Model.ProjectList)
				{
					<h3>@project.Name</h3>
					<p>@project.Description</p>
				}
			}}
		catch (Exception ex) { }



	</div>
</div>
